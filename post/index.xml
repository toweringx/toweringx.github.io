<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Toweringx</title>
    <link>https://toweringx.top/post.html</link>
    <description>Recent content in Posts on Toweringx</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 11 Mar 2021 22:29:28 +0800</lastBuildDate><atom:link href="https://toweringx.top/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PowerShell使用sudo提升为管理员权限</title>
      <link>https://toweringx.top/post/windows/powershell%E4%BD%BF%E7%94%A8sudo%E6%8F%90%E5%8D%87%E4%B8%BA%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90.html</link>
      <pubDate>Thu, 11 Mar 2021 22:29:28 +0800</pubDate>
      
      <guid>https://toweringx.top/post/windows/powershell%E4%BD%BF%E7%94%A8sudo%E6%8F%90%E5%8D%87%E4%B8%BA%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90.html</guid>
      <description>Windows下能否实现sudo一样的命令，来快速地对某一个标签页开启管理者权限呢？这里要介绍的gsudo就可以实现我们所要的功能。 安装gs</description>
    </item>
    
    <item>
      <title>Powershell美化-Fluent Terminal和oh-my-posh</title>
      <link>https://toweringx.top/post/windows/powershell%E7%BE%8E%E5%8C%96.html</link>
      <pubDate>Thu, 11 Mar 2021 20:16:08 +0800</pubDate>
      
      <guid>https://toweringx.top/post/windows/powershell%E7%BE%8E%E5%8C%96.html</guid>
      <description>1. 安装Fluent Terminal Microsoft Store搜索安装Fluent Terminal 2. 安装字体 安装任意一款PowerLine字体，可以从这个GitHub仓库获取：点此链接</description>
    </item>
    
    <item>
      <title>注解的使用</title>
      <link>https://toweringx.top/post/java/%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%BF%E7%94%A8.html</link>
      <pubDate>Thu, 11 Mar 2021 11:18:20 +0800</pubDate>
      
      <guid>https://toweringx.top/post/java/%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%BF%E7%94%A8.html</guid>
      <description>1. 注解的理解 jdk 5.0 新增的功能 Annotation 其实就是代码里的特殊标记, 这些标记可以在编译, 类加载, 运行时被读取, 并执行相应的处理。通过使用 Annotatio</description>
    </item>
    
    <item>
      <title>Java比较器-Comparable,comparator</title>
      <link>https://toweringx.top/post/java/java%E6%AF%94%E8%BE%83%E5%99%A8-comparablecomparator.html</link>
      <pubDate>Thu, 11 Mar 2021 10:46:04 +0800</pubDate>
      
      <guid>https://toweringx.top/post/java/java%E6%AF%94%E8%BE%83%E5%99%A8-comparablecomparator.html</guid>
      <description>1.Java比较器的使用背景： Java中的对象，正常情况下，只能进行比较：== 或 != 。不能使用 &amp;gt; 或 &amp;lt; 的。但是在开发场景中，我们需要对多个对象进</description>
    </item>
    
    <item>
      <title>wait()、sleep()、yield()、join()方法的区别</title>
      <link>https://toweringx.top/post/java/sleep-yield-wait-join.html</link>
      <pubDate>Wed, 03 Mar 2021 22:34:52 +0800</pubDate>
      
      <guid>https://toweringx.top/post/java/sleep-yield-wait-join.html</guid>
      <description>区别 sleep（）、yield（）、join（）都是Thread类的方法 wait（）是Object类的方法 Tips sleep抱着锁转为阻塞态，同时</description>
    </item>
    
    <item>
      <title>Juc</title>
      <link>https://toweringx.top/post/java/juc.html</link>
      <pubDate>Tue, 02 Mar 2021 17:52:25 +0800</pubDate>
      
      <guid>https://toweringx.top/post/java/juc.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>常用的几个vagrant命令</title>
      <link>https://toweringx.top/post/vagrant/%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E4%B8%AAvagrant%E5%91%BD%E4%BB%A4.html</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://toweringx.top/post/vagrant/%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E4%B8%AAvagrant%E5%91%BD%E4%BB%A4.html</guid>
      <description>$ vagrant init # 初始化 $ vagrant up # 启动虚拟机 $ vagrant halt # 关闭虚拟机 $ vagrant reload # 重启虚拟机 $ vagrant ssh # SSH 至虚拟机 $ vagrant suspend # 挂起虚拟机 $ vagrant resume # 唤醒虚拟机 $ vagrant status # 查看虚拟机</description>
    </item>
    
    <item>
      <title>多线程的创建和使用</title>
      <link>https://toweringx.top/post/java/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8.html</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://toweringx.top/post/java/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8.html</guid>
      <description>内存结构： 进程可以细化为多个线程。 每个线程，拥有自己独立的：栈、程序计数器 多个线程，共享同一个进程中的结构：方法区、堆。 Thread中的常用</description>
    </item>
    
    <item>
      <title>JDK8中新日期时间API</title>
      <link>https://toweringx.top/post/java/jdk8%E4%B8%AD%E6%96%B0%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4api.html</link>
      <pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://toweringx.top/post/java/jdk8%E4%B8%AD%E6%96%B0%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4api.html</guid>
      <description>1.日期时间API的迭代： 第一代：jdk 1.0 Date类 第二代：jdk 1.1 Calendar类，一定程度上替换Date类 第三代：jdk 1.8 提出了新的一</description>
    </item>
    
    <item>
      <title>泛型的用法和注意事项</title>
      <link>https://toweringx.top/post/java/%E6%B3%9B%E5%9E%8B%E7%9A%84%E7%94%A8%E6%B3%95%E5%92%8C%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.html</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://toweringx.top/post/java/%E6%B3%9B%E5%9E%8B%E7%9A%84%E7%94%A8%E6%B3%95%E5%92%8C%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.html</guid>
      <description>1.泛型的引入背景 ​ 集合容器类在设计阶段/声明阶段不能确定这个容器到底实际存的是什么类型的对象，所以在JDK1.5之前只能把元素类型设计为O</description>
    </item>
    
    <item>
      <title>enum枚举类的说明</title>
      <link>https://toweringx.top/post/java/enum%E6%9E%9A%E4%B8%BE%E7%B1%BB%E7%9A%84%E8%AF%B4%E6%98%8E.html</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://toweringx.top/post/java/enum%E6%9E%9A%E4%B8%BE%E7%B1%BB%E7%9A%84%E8%AF%B4%E6%98%8E.html</guid>
      <description>1.枚举类的说明： 1.枚举类的理解：类的对象只有有限个，确定的。我们称此类为枚举类 2.当需要定义一组常量时，强烈建议使用枚举类 3.如果枚举类</description>
    </item>
    
    <item>
      <title>String、StringBuffer、StringBuilder三者的对比</title>
      <link>https://toweringx.top/post/java/stringstringbufferstringbuilder%E4%B8%89%E8%80%85%E7%9A%84%E5%AF%B9%E6%AF%94.html</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://toweringx.top/post/java/stringstringbufferstringbuilder%E4%B8%89%E8%80%85%E7%9A%84%E5%AF%B9%E6%AF%94.html</guid>
      <description>1.String、StringBuffer、StringBuilder三者的对比 String:不可变的字符序列；底层使用char[]存储 St</description>
    </item>
    
    <item>
      <title>String类的使用</title>
      <link>https://toweringx.top/post/java/string%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8.html</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://toweringx.top/post/java/string%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8.html</guid>
      <description>java.lang.String类的使用 1.概述 String:字符串，使用一对&amp;quot;&amp;ldquo;引起来表示。 1.String声明为f</description>
    </item>
    
    <item>
      <title></title>
      <link>https://toweringx.top/post/java/untitled.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://toweringx.top/post/java/untitled.html</guid>
      <description>C:\Users\Forget\apps\gsudo</description>
    </item>
    
  </channel>
</rss>
